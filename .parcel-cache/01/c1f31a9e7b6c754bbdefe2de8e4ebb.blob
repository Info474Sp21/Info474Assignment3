var helpers = require("../node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);
try {
  var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
  _parcelHelpers.defineInteropFlag(exports);
  var _react = require('react');
  var _reactDefault = _parcelHelpers.interopDefault(_react);
  require('./style.css');
  var _hooksUseFetch = require("../hooks/useFetch");
  require('d3');
  var _jsxFileName = "/Users/claytonnovotney/Desktop/UW/Spring2021/Info474/Info474Assignment3/src/D3TestingClay.js", _s = $RefreshSig$();
  function D3TestingClay() {
    _s();
    const dataByYearURL = "https://raw.githubusercontent.com/Info474Sp21/Info474Assignment3/main/data/data_by_year_o.csv";
    const [fetchData, loading] = _hooksUseFetch.useFetch(dataByYearURL);
    // const title = "Spotify Music Data";
    // const xAxisLabel = "Year";
    // var yAxisLabel = "Popularity";
    // const svg = d3.select('svg');
    // const margin = 60;
    // const width = 1000 - 2 * margin;
    // const height = 600 - 2 * margin;
    // const chart = svg.append('g')
    // .attr('transform', `translate(${margin}, ${margin})`);
    // const yScale = d3.scaleLinear()
    // .range([height, 0])
    // .domain([0, 275000]);
    // chart.append('g')
    // .call(d3.axisLeft(yScale));
    // const xScale = d3.scaleBand()
    // .range([0, width])
    // .domain(fetchData.map((s) => s.year));
    // chart.append('g')
    // .attr('transform', `translate(0, ${height})`)
    // .call(d3.axisBottom(xScale));
    const titleText = 'Top 10 Most Populous Countries';
    const xAxisLabelText = 'Population';
    const svg = select('svg');
    const width = +svg.attr('width');
    const height = +svg.attr('height');
    const render = data => {
      const xValue = d => d['population'];
      const yValue = d => d.country;
      const margin = {
        top: 50,
        right: 40,
        bottom: 77,
        left: 180
      };
      const innerWidth = width - margin.left - margin.right;
      const innerHeight = height - margin.top - margin.bottom;
      const xScale = scaleLinear().domain([0, max(data, xValue)]).range([0, innerWidth]);
      const yScale = scaleBand().domain(data.map(yValue)).range([0, innerHeight]).padding(0.1);
      const g = svg.append('g').attr('transform', `translate(${margin.left},${margin.top})`);
      const xAxisTickFormat = number => format('.3s')(number).replace('G', 'B');
      const xAxis = axisBottom(xScale).tickFormat(xAxisTickFormat).tickSize(-innerHeight);
      g.append('g').call(axisLeft(yScale)).selectAll('.domain, .tick line').remove();
      const xAxisG = g.append('g').call(xAxis).attr('transform', `translate(0,${innerHeight})`);
      xAxisG.select('.domain').remove();
      xAxisG.append('text').attr('class', 'axis-label').attr('y', 65).attr('x', innerWidth / 2).attr('fill', 'black').text(xAxisLabelText);
      g.selectAll('rect').data(data).enter().append('rect').attr('y', d => yScale(yValue(d))).attr('width', d => xScale(xValue(d))).attr('height', yScale.bandwidth());
      g.append('text').attr('class', 'title').attr('y', -10).text(titleText);
    };
    return (
      /*#__PURE__*/_reactDefault.default.createElement("div", {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 96,
          columnNumber: 9
        }
      }, /*#__PURE__*/_reactDefault.default.createElement("h1", {
        className: "centered",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 97,
          columnNumber: 13
        }
      }, "Testing D3 Implementation"), /*#__PURE__*/_reactDefault.default.createElement("svg", {
        id: "d3-barchart",
        width: "600",
        height: "600",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 98,
          columnNumber: 13
        }
      }))
    );
  }
  _s(D3TestingClay, "0ze5z7LqkkUwfzzjYzgIKoG3QDE=", false, function () {
    return [_hooksUseFetch.useFetch];
  });
  _c = D3TestingClay;
  exports.default = D3TestingClay;
  var _c;
  $RefreshReg$(_c, "D3TestingClay");
  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
