var helpers = require("../node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);
try {
  var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
  _parcelHelpers.defineInteropFlag(exports);
  var _react = require('react');
  var _reactDefault = _parcelHelpers.interopDefault(_react);
  require('./style.css');
  var _jsxFileName = "/Users/claytonnovotney/Desktop/UW/Spring2021/Info474/Info474Assignment3/src/Conclusion.js";
  class Conclusion extends _react.Component {
    render() {
      return (
        /*#__PURE__*/_reactDefault.default.createElement("div", {
          style: {
            marginTop: 30
          },
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 7,
            columnNumber: 13
          }
        }, /*#__PURE__*/_reactDefault.default.createElement("h1", {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 8,
            columnNumber: 17
          }
        }, "Conclusion"), /*#__PURE__*/_reactDefault.default.createElement("br", {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 9,
            columnNumber: 17
          }
        }), /*#__PURE__*/_reactDefault.default.createElement("p", {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 10,
            columnNumber: 17
          }
        }, "In summary to my experience with this assignment. I found myself completing very redundant processing for loading transforming and displaying the data within the data sets that I found. I tried multiple times to reduce redundancies within my code but began running into issues with the DOM, Hooks, and other tedious problems that required me to basically brute force this assignment and create multiple redudanct components that I would then load into the Vega visualiser."), /*#__PURE__*/_reactDefault.default.createElement("br", {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 16,
            columnNumber: 17
          }
        }), /*#__PURE__*/_reactDefault.default.createElement("p", {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 17,
            columnNumber: 17
          }
        }, "Using Tableau for the initial data loading and transformation was very obnoxious because working with the graphical user interface on their application was SOOOOO much easier than physically coding in the visualisations that I was interested in displaying using VEGA. While I chose to use VEGA for this assignment, I started out working with D3 as well and could see the appeal to that library program as well. I also think that I went about the assignment completely wrong, but by the time I figured this out I was way too deep into it. I simply altered the CSV files themselves for the queries rather than performing the queries with in the JS application itself. While this may have been wrong, it could have helped the runtime of the application significantly. This is also a huge learning experience for me since I am aware of the tools and features that will help me complete the transformations and queries within the VegaLite or D3 library itself."), /*#__PURE__*/_reactDefault.default.createElement("br", {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 25,
            columnNumber: 17
          }
        }), /*#__PURE__*/_reactDefault.default.createElement("p", {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 26,
            columnNumber: 17
          }
        }, "I also figured out at the end of the assignment, that the data sets that I was using was also very redundant. I could have easily created one main data set with all of the columns that I loaded into multiple different csv files."), /*#__PURE__*/_reactDefault.default.createElement("br", {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 30,
            columnNumber: 17
          }
        }), /*#__PURE__*/_reactDefault.default.createElement("p", {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 31,
            columnNumber: 17
          }
        }, "All in all, this was a very interesting assignment to work on and helped me get acquanted with the coding programs that are used for visualizing data in the web interfaces we are using every day."))
      );
    }
  }
  exports.default = Conclusion;
  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
