var helpers = require("../node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);
try {
  var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
  _parcelHelpers.defineInteropFlag(exports);
  var _react = require('react');
  var _reactDefault = _parcelHelpers.interopDefault(_react);
  require('./style.css');
  require("../hooks/useFetch");
  var _d3Array = require("d3-array");
  var _d3AxisForReact = require("d3-axis-for-react");
  var _d3Scale = require("d3-scale");
  var _jsxFileName = "/Users/claytonnovotney/Desktop/UW/Spring2021/Info474/Info474Assignment3/src/D3TestingClay.js";
  function helper() {
    return "Helper";
  }
  function D3TestingClay(data) {
    var yAxisName = "acousticness";
    var variables = {
      "acousticness": "acousticness",
      "danceability": "danceability"
    };
    const size = 500;
    const margin = 20;
    const axisTextAlignmentFactor = 10;
    const xScale = _d3Scale.scaleLinear().domain(_d3Array.extent(data, d => d.year)).range([size - 350, size]);
    const yScale = _d3Scale.scaleLinear().domain(_d3Array.extent(data, d => d[variables[yAxisName]])).range([size - 350, size]);
    const _bins = _d3Array.bin().thresholds(10);
    // call bin i guess?
    const tmaxBins = _bins(// bin takes an array: aka map of the csv.
    data.map(d => {
      return +d.year;
    }));
    console.log(tmaxBins);
    return (
      /*#__PURE__*/_reactDefault.default.createElement("div", {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 35,
          columnNumber: 9
        }
      }, /*#__PURE__*/_reactDefault.default.createElement("h1", {
        className: "centered",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 36,
          columnNumber: 13
        }
      }, "Testing D3 Implementation"), /*#__PURE__*/_reactDefault.default.createElement("svg", {
        width: 500,
        height: 500,
        style: {
          border: "1px solid black"
        },
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 37,
          columnNumber: 13
        }
      }, data.map((year, i) => {
        return (
          /*#__PURE__*/_reactDefault.default.createElement("svg", {
            __self: this,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 40,
              columnNumber: 25
            }
          }, /*#__PURE__*/_reactDefault.default.createElement("rect", {
            y: size - margin - year[variables[yAxisName]] * 200,
            width: "2.8",
            height: year[variables[yAxisName]] * 200,
            x: 100 + i * 3.4,
            fill: "black",
            __self: this,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 41,
              columnNumber: 29
            }
          }))
        );
      }), /*#__PURE__*/_reactDefault.default.createElement("g", {
        transform: `translate(-60, ${size - margin})`,
        className: "axisLeft",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 51,
          columnNumber: 17
        }
      }, /*#__PURE__*/_reactDefault.default.createElement(_d3AxisForReact.Axis, {
        orient: _d3AxisForReact.Orient.left,
        scale: yScale,
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 53,
          columnNumber: 19
        }
      })), /*#__PURE__*/_reactDefault.default.createElement("g", {
        transform: `translate(0, ${size - margin})`,
        className: "axisBottom",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 58,
          columnNumber: 17
        }
      }, /*#__PURE__*/_reactDefault.default.createElement(_d3AxisForReact.Axis, {
        orient: _d3AxisForReact.Orient.bottom,
        scale: xScale,
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 60,
          columnNumber: 21
        }
      })), /*#__PURE__*/_reactDefault.default.createElement("text", {
        x: margin + 65,
        textAnchor: "end",
        y: size - margin + axisTextAlignmentFactor,
        style: {
          fontSize: 12,
          fontFamily: "Gill Sans, sans serif"
        },
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 65,
          columnNumber: 17
        }
      }, "Year"), /*#__PURE__*/_reactDefault.default.createElement("text", {
        x: 100,
        textAnchor: "begin",
        y: 30,
        style: {
          fontSize: 15,
          fontFamily: "Gill Sans, sans serif"
        },
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 73,
          columnNumber: 17
        }
      }, "I need to look at how to bin this.")))
    );
  }
  _c = D3TestingClay;
  exports.default = D3TestingClay;
  var _c;
  $RefreshReg$(_c, "D3TestingClay");
  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
